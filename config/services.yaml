# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    torrent_image_directory: '%kernel.project_dir%/public/uploads/images/torrents'
    torrent_file_directory: '%kernel.project_dir%/public/uploads/torrentfiles'
    bin_mjml: '%kernel.project_dir%/node_modules/.bin/mjml'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $oldDatabase: '%env(DATABASE_LEGACY)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: [ 'controller.service_arguments' ]

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Service\MailerService:
        arguments: [ '@Symfony\Component\Mailer\MailerInterface', '@logger', '@twig', '%bin_mjml%' ]

    App\EventListener\LoginListener:
        tags:
            - { name: 'kernel.event_listener', event: 'security.interactive_login' }

    # Maintenance
    App\EventListener\MaintenanceListener:
        arguments: ['@twig', '@App\Service\Maintenance\MaintenanceModeServiceInterface']
        tags:
            - { name: kernel.event_listener, event: kernel.request, priority: 1000000 }

    App\Service\Maintenance\MaintenanceModeServiceInterface: '@App\Service\Maintenance\MaintenanceModeService'
